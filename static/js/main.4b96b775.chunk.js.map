{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","id","username","email","className","alt","src","CardList","kittens","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","useState","setKittens","searchfield","setSearchfield","useEffect","fetch","then","response","json","users","filteredKittens","filter","kitten","toLowerCase","includes","length","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAceA,EAZF,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC7B,OACC,sBAAKC,UAAU,kDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,wCAAmCL,EAAK,GAAxC,mBACrB,gCACC,6BAAKC,IACL,4BAAIC,WCMOI,EAXE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEnB,OACC,8BACEA,EAAQC,KAAI,SAACC,EAAMC,GACnB,OAAO,cAAC,EAAD,CAAcV,GAAIS,EAAKT,GAAIC,SAAUQ,EAAKR,SAAUC,MAAOO,EAAKP,OAArDQ,SCOPC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpB,OACC,qBAAKT,UAAU,MAAf,SACC,uBACCA,UAAU,6CACVU,KAAK,SACLC,YAAY,iBACZC,SAAUH,OCHCI,EAJA,SAACC,GACf,OAAO,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SAAkFJ,EAAMK,Y,4BCiBjFC,E,kDAjBd,aAAe,IAAD,8BACb,gBACKC,MAAQ,CACZC,UAAU,GAHE,E,+DAOKC,EAAOC,GACzBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAG1B,OAAIG,KAAKJ,MAAMC,SACP,qEAEDG,KAAKX,MAAMK,a,GAfOQ,a,MC8CZC,MAvCf,WAAe,MAEkBC,mBAAS,IAF3B,mBAENzB,EAFM,KAEG0B,EAFH,OAG0BD,mBAAS,IAHnC,mBAGNE,EAHM,KAGOC,EAHP,KAQdC,qBAAU,WAETC,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAWR,EAAWQ,QAC3B,IAGH,IAGMC,EAAkBnC,EAAQoC,QAAO,SAACC,GACvC,OAAOA,EAAO3C,SAAS4C,cAAcC,SAASZ,EAAYW,kBAE3D,OAAQtC,EAAQwC,OAKf,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWS,aAbU,SAACoC,GACvBb,EAAea,EAAMC,OAAOC,UAa3B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU3C,QAASmC,WATtB,qBAAKvC,UAAU,KAAf,SACC,oBAAIA,UAAU,KAAd,wB,YC1BHgD,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.4b96b775.chunk.js","sourcesContent":["// import React from \"react\";\r\n\r\nconst Card = ({ id, username, email }) => {\r\n\treturn (\r\n\t\t<div className=\"bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t\t\t<img alt=\"robots\" src={`https://robohash.org/set_set4/${id + 12}?size=220x220`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{username}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","// import React from \"react\";\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ kittens }) => {\r\n\t// if (true) { throw new Error(\"NOOOO!\") }\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{kittens.map((user, i) => {\r\n\t\t\t\treturn <Card key={i} id={user.id} username={user.username} email={user.email} />;\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardList;\r\n","// import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n\treturn (\r\n\t\t<div className=\"pa2\">\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"pa3 ba br3 b--light-green bg-lightest-blue\"\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tplaceholder=\"search kittens\"\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;\r\n","// import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n\treturn <div style={{ overflowY: \"scroll\", border: \"1px solid black\", height: \"700px\" }}>{props.children}</div>;\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\thasError: false,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentsDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true });\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>Call the Handyman. Something broke.</h1>;\r\n\t\t}\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\nexport default ErrorBoundry;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nimport './App.css';\r\n\r\n// class App extends Component {\r\nfunction App() {\r\n\t// constructor() { super(); this.state = { kittens : [], searchfield : '', }; }\r\n\tconst [ kittens, setKittens ] = useState([]);\r\n\tconst [ searchfield, setSearchfield ] = useState('');\r\n\r\n\t// componentDidMount() { fetch('https://jsonplaceholder.typicode.com/users').then((response) => response.json()).then((users) => this.setState({ kittens: users })); }\r\n\r\n\t// Similar to componentDidMount and componentDidUpdate:\r\n\tuseEffect(() => {\r\n\t\t// Update the document title using the browser API\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((users) => setKittens(users));\r\n\t}, []);\r\n\t// [ searchfield ], this will only run useEffect and re-fetch when searchfield changes\r\n\r\n\tconst onSearchChange = (event) => {\r\n\t\tsetSearchfield(event.target.value);\r\n\t};\r\n\tconst filteredKittens = kittens.filter((kitten) => {\r\n\t\treturn kitten.username.toLowerCase().includes(searchfield.toLowerCase());\r\n\t});\r\n\treturn !kittens.length ? (\r\n\t\t<div className=\"tc\">\r\n\t\t\t<h1 className=\"f1\">Loading</h1>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<div className=\"tc\">\r\n\t\t\t<h1 className=\"f1\">KittenPals</h1>\r\n\t\t\t<SearchBox searchChange={onSearchChange} />\r\n\t\t\t<Scroll>\r\n\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t<CardList kittens={filteredKittens} />\r\n\t\t\t\t</ErrorBoundry>\r\n\t\t\t</Scroll>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\n\nimport \"tachyons\";\nimport \"./index.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\"),\n);\n"],"sourceRoot":""}